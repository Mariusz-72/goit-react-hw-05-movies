{"version":3,"file":"static/js/186.bf29dba7.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/Api';\n\nconst Reviews = ({ match }) => {\n  const [reviews, setReviews] = useState([]);\n\n  const movieId = match.params.movieId;\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <h4>{review.author}</h4>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = '6909cd80103b2d22b83ee7f9c75d0eee';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nconst get = async (url, params = {}) => {\n    try {\n        const response = await axios.get(url, {\n            params: { ...params, api_key: API_KEY },\n        });\n        return response.data;\n    } catch (error) {\n        throw new Error(\n            error.response?.data?.status_message || 'Something went wrong'\n        );\n    }\n};\n\n\nexport const getTrendingMovies = () => {\n    const url = `${BASE_URL}/trending/movie/day`;\n    return get(url);\n};\n\nexport const searchMovies = query => {\n    const url = `${BASE_URL}/search/movie`;\n    const params = { query };\n    return get(url, params);\n};\n\nexport const getMovieDetails = movieId => {\n    const url = `${BASE_URL}/movies/${movieId}`;\n    return get(url);\n};\n\nexport const getMovieCredits = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/credits`;\n    return get(url);\n};\n\nexport const getMovieReviews = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/reviews`\n    return get(url);\n};\n"],"names":["_ref","match","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","params","useEffect","fetchMovieReviews","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getMovieReviews","sent","results","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","map","review","author","content","id","API_KEY","BASE_URL","get","url","_error$response","_error$response$data","_args","length","undefined","axios","_objectSpread","api_key","abrupt","data","Error","status_message","_x","getTrendingMovies","concat","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}