{"version":3,"file":"static/js/888.2c356821.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n} from 'services/Api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        const castData = await getMovieCredits(movieId);\n        setMovie(movieData);\n        setCast(castData.cast);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    if (activeTab === 'reviews') {\n      fetchReviews();\n    }\n  }, [movieId, activeTab]);\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\n  const getGenres = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const handleGoBack = () => {\n    navigate('/movies');\n  };\n\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n\nreturn (\n        <>\n        <div className={css.movieDetails}>\n            <button className={css.goBack} onClick={handleGoBack}>\n            <Link to=\"/movies\" className={css.linkStyle}>\n                &larr; Go Back\n            </Link>\n            </button>\n\n            {movie && (\n            <>\n                <div className={css.movieInfo}>\n                <div className={css.moviePoster}>\n                    <img\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    alt={movie.original_title}\n                    className={css.posterImage}\n                    />\n                </div>\n                <div className={css.movieDetailsText}>\n                    <h1>\n                    {movie.original_title} ({getYear(movie.release_date)})\n                    </h1>\n                    <h2>User Score: {movie.vote_average * 10}%</h2>\n                    <h2>Overview</h2>\n                    <p>{movie.overview}</p>\n                    <h2>Genres</h2>\n                    <p>{getGenres(movie.genres)}</p>\n                </div>\n                </div>\n\n                <div>\n                <div className={css.tabs}>\n                    <ul className={css.ulStyle}>\n                    <li>\n                        <button\n                        onClick={() => handleTabClick('cast')}\n                        className={`${\n                            activeTab === 'cast' ? css.activeTab : ''\n                        } ${css.castButton}`}\n                        >\n                        Cast\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                        onClick={() => handleTabClick('reviews')}\n                        className={activeTab === 'reviews' ? css.activeTab : ''}\n                        >\n                        Reviews\n                        </button>\n                    </li>\n                    </ul>\n                </div>\n\n                {activeTab === 'cast' && (\n                    <div>\n                    {cast.length > 0 ? (\n                        <div className={css.castMargin}>\n                        <h2>Cast</h2>\n                        {cast.map(actor => (\n                            <div key={actor.id}>\n                            <div className={css.castItem}>\n                                <img\n                                src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                                alt={actor.name}\n                                className={css.castImage}\n                                />\n                                <div>\n                                <h4>{actor.name}</h4>\n                                <p>Character: {actor.character}</p>\n                                </div>\n                            </div>\n                            </div>\n                        ))}\n                        </div>\n                    ) : (\n                        <div>No cast available</div>\n                    )}\n                    </div>\n                )}\n\n                {activeTab === 'reviews' && (\n                    <div>\n                    {reviews.length > 0 ? (\n                        <div className={css.reviewsMargin}>\n                        <h2>Reviews</h2>\n                        {reviews.map(review => (\n                            <div key={review.id}>\n                            <h4>{review.author}</h4>\n                            <p>{review.content}</p>\n                            </div>\n                        ))}\n                        </div>\n                    ) : (\n                        <div>No reviews available</div>\n                    )}\n                    </div>\n                )}\n                </div>\n            </>\n            )}\n        </div>\n        </>\n    );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = '6909cd80103b2d22b83ee7f9c75d0eee';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nconst get = async (url, params = {}) => {\n    try {\n        const response = await axios.get(url, {\n            params: { ...params, api_key: API_KEY },\n        });\n        return response.data;\n    } catch (error) {\n        throw new Error(\n            error.response?.data?.status_message || 'Something went wrong'\n        );\n    }\n};\n\n\nexport const getTrendingMovies = () => {\n    const url = `${BASE_URL}/trending/movie/day`;\n    return get(url);\n};\n\nexport const searchMovies = query => {\n    const url = `${BASE_URL}/search/movie`;\n    const params = { query };\n    return get(url, params);\n};\n\nexport const getMovieDetails = movieId => {\n    const url = `${BASE_URL}/movies/${movieId}`;\n    return get(url);\n};\n\nexport const getMovieCredits = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/credits`;\n    return get(url);\n};\n\nexport const getMovieReviews = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/reviews`\n    return get(url);\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","cast","setCast","_useState5","_useState6","reviews","setReviews","navigate","useNavigate","_useState7","_useState8","activeTab","setActiveTab","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","castData","_context","prev","next","getMovieDetails","sent","getMovieCredits","t0","console","log","stop","apply","arguments","fetchReviews","_ref2","_callee2","reviewsData","_context2","getMovieReviews","results","genres","releaseDate","handleTabClick","tab","_jsx","_Fragment","children","_jsxs","className","css","onClick","Link","to","src","concat","poster_path","alt","original_title","release_date","Date","getFullYear","vote_average","overview","map","genre","name","join","length","actor","profile_path","character","id","review","author","content","API_KEY","BASE_URL","get","url","params","response","_error$response","_error$response$data","_args","undefined","axios","_objectSpread","api_key","abrupt","data","Error","status_message","_x","getTrendingMovies","searchMovies","query"],"sourceRoot":""}