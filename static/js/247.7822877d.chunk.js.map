{"version":3,"file":"static/js/247.7822877d.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'services/Api';\n\nconst Cast = ({ match }) => {\n    const [cast, setCast] = useState([]);\n    const movieId = match.params.movieId;\n\n    useEffect(() => {\n        const fetchMovieCredits = async () => {\n            try {\n                const response = await getMovieCredits(movieId);\n                setCast(response.cast);\n            } catch (error) {\n                console.log('Error fetching movie credits:', error);\n            }\n        };\n\n        fetchMovieCredits();\n    }, [movieId]);\n\n    return (\n        <div>\n            <h2>Cast</h2>\n            {cast.map(actor => (\n                <div key={actor.id}>\n                    <h4>{actor.name}</h4>\n                    <p>{actor.character}</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '5eb4fde0c979574b7842bf5dec2210bc';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst get = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, {\n      params: { ...params, api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.status_message || 'Something went wrong'\n    );\n  }\n};\n\nexport const getTrendingMovies = () => {\n  const url = `${BASE_URL}/trending/movie/day`;\n  return get(url);\n};\n\nexport const searchMovies = query => {\n  const url = `${BASE_URL}/search/movie`;\n  const params = { query };\n  return get(url, params);\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}`;\n  return get(url);\n};\n\nexport const getMovieCredits = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits`;\n  return get(url);\n};\n\nexport const getMovieReviews = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews`;\n  return get(url);\n};\n"],"names":["_ref","match","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","params","useEffect","fetchMovieCredits","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getMovieCredits","sent","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","map","actor","name","character","id","API_KEY","BASE_URL","get","url","_error$response","_error$response$data","_args","length","undefined","axios","_objectSpread","api_key","abrupt","data","Error","status_message","_x","getTrendingMovies","concat","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}